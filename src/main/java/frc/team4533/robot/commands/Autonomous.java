package frc.team4533.robot.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import frc.team4533.robot.Robot;
/**
 * The autonomous command that the robot will run. 
 * @author 4533 Programming Team
 *
 */
public class Autonomous extends CommandGroup {

	private String gameData;
	private String position;

	/**
	 * The robot turning error is 6.3 degrees
	 * @param gameData
	 *            The setup for the switches and scale
	 * @param position
	 *            The position we put the robot at
	 */
	public Autonomous(String gameData, String position) {
		//this.addSequential(new AngleTurn(-90));
		//this.addSequential(new DriveDistance(100), 3);
//		this.gameData = gameData;
//		this.position = position;
//		// Move to and cross the Auto Line
		double[][] leftPoints={{0,47.15625,7.8125},{0.00614013671875,47.1549806103862,7.8125},{0.012280108152394,47.1511719517639,7.8125},{0.0184195836669466,47.1448225552162,7.8125},{0.0245582324371571,47.1359299739705,7.8125},{0.0306957233191845,47.1244907855429,7.8125},{0.036831724723552,47.1105005947618,7.8125},{0.042965904488495,47.0939540376934,7.8125},{0.0490979297538196,47.0748447864961,7.8125},{0.0552274668353946,47.0531655552399,7.8125},{0.0613541811003998,47.0289081067307,7.8125},{0.0674777368434637,47.0020632603872,7.8125},{0.0735977971638266,46.9726209012261,7.8125},{0.0797140238436738,46.9405699900151,7.8125},{0.0858260772277903,46.9058985746623,7.8125},{0.0919336161046995,46.8685938029186,7.8125},{0.0980362975894545,46.8286419364723,7.8125},{0.104133777008266,46.7860283665296,7.8125},{0.110225707785158,46.7407376309752,7.8125},{0.116311741330858,46.692753433219,7.8125},{0.122391526934142,46.6420586628426,7.8125},{0.128464711655866,46.5886354181658,7.8125},{0.134530940225939,46.5324650308614,7.8125},{0.1405898549435,46.4735280927582,7.8125},{0.146641095580577,46.4118044849753,7.8125},{0.152684299289559,46.3472734095454,7.8125},{0.15871910051476,46.2799134236883,7.8125},{0.164745130908469,46.2097024769079,7.8125},{0.170762019251817,46.1366179510957,7.8125},{0.176769391380866,46.0606367038278,7.8125},{0.182766870118343,45.9817351150589,7.8125},{0.18875407521145,45.8998891374191,7.8125},{0.194730623276218,45.8150743503328,7.8125},{0.200696127748917,45.7272660181849,7.8125},{0.206650198845035,45.6364391527704,7.8125},{0.212592443526386,45.5425685802704,7.8125},{0.218522465476942,45.4456290130056,7.8125},{0.22443986508801,45.3455951262275,7.8125},{0.230344239453404,45.2424416402115,7.8125},{0.236235182375307,45.1361434079261,7.8125},{0.242112284381547,45.0266755085548,7.8125},{0.247975132755057,44.9140133471537,7.8125},{0.253823311576301,44.7981327607306,7.8125},{0.259656401779521,44.6790101310325,7.8125},{0.265473981223666,44.5566225043325,7.8125},{0.271275624778917,44.4309477185012,7.8125},{0.277060904429764,44.3019645376484,7.8125},{0.282829389395604,44.1696527946151,7.8125},{0.288580646269902,44.033993541586,7.8125},{0.294314239178963,43.8949692090866,7.8125},{0.300029729961396,43.7525637736113,7.8125},{0.305726678369419,43.6067629341149,7.8125},{0.311404642293132,43.4575542975801,7.8125},{0.317063178008962,43.3049275738466,7.8125},{0.322701840453474,43.1488747798627,7.8125},{0.328320183523768,42.9893904534828,7.8125},{0.333917760405732,42.8264718768997,7.8125},{0.33949412393137,42.6601193097536,7.8125},{0.345048826966494,42.4903362319118,7.8125},{0.350581422830024,42.3171295958571,7.8125},{0.356091465746152,42.1405100885579,7.8125},{0.361578511330599,41.960492402627,7.8125},{0.367042117112191,41.7770955164963,7.8125},{0.372481843090902,41.5903429832499,7.8125},{0.377897252333512,41.4002632276691,7.8125},{0.383287911607948,41.2068898509366,7.8125},{0.388653392057289,41.010261942344,7.8125},{0.393993269914365,40.8104243972251,7.8125},{0.399307127257754,40.607428240214,7.8125},{0.404594552809865,40.4013309527941,7.8125},{0.409855142777677,40.1921968039594,7.8125},{0.415088501736526,39.9800971826646,7.8125},{0.420294243557185,39.7651109305792,7.8125},{0.425471992376271,39.5473246735022,7.8125},{0.4306213836098,39.3268331496242,7.8125},{0.435742065009491,39.1037395326513,7.8125},{0.440833697761138,38.8781557476289,7.8125},{0.44589595762411,38.6502027771284,7.8125},{0.450928536110716,38.4200109552804,7.8125},{0.455931141703851,38.1877202469658,7.8125},{0.460903501111008,37.9534805093043,7.8125},{0.465845360552324,37.717451732418,7.8125},{0.470756487079982,37.4798042562945,7.8125},{0.475636669925854,37.2407189604352,7.8125},{0.480485721873827,37.0003874228483,7.8125},{0.485303480652844,36.7590120448461,7.8125},{0.490089810346183,36.5168061380234,7.8125},{0.494844602812072,36.2739939697425,7.8125},{0.499567779110215,36.0308107634293,7.8125},{0.50425929092837,35.7875026499985,7.8125},{0.508919122002589,35.5443265667808,7.8125},{0.513547289524305,35.3015501004213,7.8125},{0.518143845526964,35.0594512703612,7.8125},{0.522708878244459,34.8183182497108,7.8125},{0.527242513433223,34.5784490205677,7.8125},{0.531744915649443,34.3401509611381,7.8125},{0.536216289472508,34.1037403623774,7.8125},{0.540656880665526,33.8695418722889,7.8125},{0.54506697726348,33.6378878664943,7.8125},{0.54944691057943,33.409117744228,7.8125},{0.553797056119043,33.1835771494986,7.8125},{0.558117834393717,32.9616171178079,7.8125},{0.562409711622599,32.7435931495142,7.8125},{0.566673200313941,32.5298642116645,7.8125},{0.570908859716502,32.3207916708995,7.8125},{0.575117296131984,32.1167381608393,7.8125},{0.57929916308001,31.9180663881874,7.8125},{0.583455161307638,31.7251378826229,7.8125},{0.587586038636105,31.5383116963879,7.8125},{0.591692589638239,31.3579430602954,7.8125},{0.595775655140881,31.1843820036741,7.8125},{0.59983612154761,31.0179719465195,7.8125},{0.603874919978146,30.8590482728121,7.8125},{0.607893025222002,30.7079368945912,7.8125},{0.611891454505151,30.5649528169118,7.8125},{0.615871266069853,30.43039871426,7.8125},{0.619833557569106,30.3045635293346,7.8125},{0.623779464278655,30.1877211053218,7.8125},{0.62771015713091,30.0801288628759,7.8125},{0.631626840576597,29.9820265329691,7.8125},{0.635530750281411,29.8936349565858,7.8125},{0.639423150666383,29.8151549618989,7.8125},{0.643305332302047,29.7467663290898,7.8125},{0.647178609167814,29.6886268523523,7.8125},{0.651044315789214,29.6408715078668,7.8125},{0.654903804266801,29.6036117356433,7.8125},{0.658758441211546,29.5769348421356,7.8125},{0.662609604602449,29.5609035294222,7.8125},{0.666458680582843,138.990968954175,7.8125}};
		double[][] rightPoints={{0,60,7.8125},{0.0078125,60,7.8125},{0.015625,60,7.8125},{0.0234375,60,7.8125},{0.03125,60,7.8125},{0.0390625,60,7.8125},{0.046875,60,7.8125},{0.0546875,60,7.8125},{0.0625,60,7.8125},{0.0703125,60,7.8125},{0.078125,60,7.8125},{0.0859375,60,7.8125},{0.09375,60,7.8125},{0.1015625,60,7.8125},{0.109375,60,7.8125},{0.1171875,60,7.8125},{0.125,60,7.8125},{0.1328125,60,7.8125},{0.140625,60,7.8125},{0.1484375,60,7.8125},{0.15625,60,7.8125},{0.1640625,60,7.8125},{0.171875,60,7.8125},{0.1796875,60,7.8125},{0.1875,60,7.8125},{0.1953125,60,7.8125},{0.203125,60,7.8125},{0.2109375,60,7.8125},{0.21875,60,7.8125},{0.2265625,60,7.8125},{0.234375,60,7.8125},{0.2421875,60,7.8125},{0.25,60,7.8125},{0.2578125,60,7.8125},{0.265625,60,7.8125},{0.2734375,60,7.8125},{0.28125,60,7.8125},{0.2890625,60,7.8125},{0.296875,60,7.8125},{0.3046875,60,7.8125},{0.3125,60,7.8125},{0.3203125,60,7.8125},{0.328125,60,7.8125},{0.3359375,60,7.8125},{0.34375,60,7.8125},{0.3515625,60,7.8125},{0.359375,60,7.8125},{0.3671875,60,7.8125},{0.375,60,7.8125},{0.3828125,60,7.8125},{0.390625,60,7.8125},{0.3984375,60,7.8125},{0.40625,60,7.8125},{0.4140625,60,7.8125},{0.421875,60,7.8125},{0.4296875,60,7.8125},{0.4375,60,7.8125},{0.4453125,60,7.8125},{0.453125,60,7.8125},{0.4609375,60,7.8125},{0.46875,60,7.8125},{0.4765625,60,7.8125},{0.484375,60,7.8125},{0.4921875,60,7.8125},{0.5,60,7.8125},{0.5078125,60,7.8125},{0.515625,60,7.8125},{0.5234375,60,7.8125},{0.53125,60,7.8125},{0.5390625,60,7.8125},{0.546875,60,7.8125},{0.5546875,60,7.8125},{0.5625,60,7.8125},{0.5703125,60,7.8125},{0.578125,60,7.8125},{0.5859375,60,7.8125},{0.59375,60,7.8125},{0.6015625,60,7.8125},{0.609375,60,7.8125},{0.6171875,60,7.8125},{0.625,60,7.8125},{0.6328125,60,7.8125},{0.640625,60,7.8125},{0.6484375,60,7.8125},{0.65625,60,7.8125},{0.6640625,60,7.8125},{0.671875,60,7.8125},{0.6796875,60,7.8125},{0.6875,60,7.8125},{0.6953125,60,7.8125},{0.703125,60,7.8125},{0.7109375,60,7.8125},{0.71875,60,7.8125},{0.7265625,60,7.8125},{0.734375,60,7.8125},{0.7421875,60,7.8125},{0.75,60,7.8125},{0.7578125,60,7.8125},{0.765625,60,7.8125},{0.7734375,60,7.8125},{0.78125,60,7.8125},{0.7890625,60,7.8125},{0.796875,60,7.8125},{0.8046875,60,7.8125},{0.8125,60,7.8125},{0.8203125,60,7.8125},{0.828125,60,7.8125},{0.8359375,60,7.8125},{0.84375,60,7.8125},{0.8515625,60,7.8125},{0.859375,60,7.8125},{0.8671875,60,7.8125},{0.875,60,7.8125},{0.8828125,60,7.8125},{0.890625,60,7.8125},{0.8984375,60,7.8125},{0.90625,60,7.8125},{0.9140625,60,7.8125},{0.921875,60,7.8125},{0.9296875,60,7.8125},{0.9375,60,7.8125},{0.9453125,60,7.8125},{0.953125,60,7.8125},{0.9609375,60,7.8125},{0.96875,60,7.8125},{0.9765625,60,7.8125},{0.984375,60,7.8125},{0.9921875,60,7.8125},{1,60,7.8125}};

		this.addSequential(new MotionProfile(leftPoints,rightPoints));
/*		// The lucky time that we are lined up perfectly
		if (gameData.substring(0, 1).equals(position)) {
			// Move to the switch
			this.addSequential(new DriveDistance(48));
			
			// Determine which way to turn
			if (gameData.substring(0, 1).equals("L")) {
				this.addSequential(new AngleTurn(90));
			} else {
				this.addSequential(new AngleTurn(-90));
			}
			// Releases the cube
			// this.addSequential(new MoveSwingArm(40));
			this.addSequential(new PushOut());
		}

		// The other times that we are not lined up
		else {
			// Determine which direction we need to move
			if (gameData.substring(0, 1).equals("L")) {
				this.addSequential(new AngleTurn(90));
			} else {
				this.addSequential(new AngleTurn(-90));
			}
			// If we put our robot in the middle of the field
			if (position.equals("M")) {
				this.addSequential(new DriveDistance(50));
			}

			// If we are on the opposite side of the field
			else {
				this.addSequential(new DriveDistance(100));
			}
			// Determine which way we need to turn to face the opposing side of
			// the field
			if (gameData.substring(0, 1).equals("L")) {
				this.addSequential(new AngleTurn(-90));
			} else {
				this.addSequential(new AngleTurn(90));
			}
			// Move to the switch
			this.addSequential(new DriveDistance(48));
			// Determine which way to face the switch
			if (gameData.substring(0, 1).equals("L")) {
				this.addSequential(new AngleTurn(90));
			} else {
				this.addSequential(new AngleTurn(-90));
			}
			// Releases the cube
			// this.addSequential(new MoveSwingArm(40));
			this.addSequential(new PushOut());
			}
	*/
	}
}
